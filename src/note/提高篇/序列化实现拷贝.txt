 浅拷贝：使用一个已知实例对新创建实例的成员变量逐个赋值，这个方式被称为浅拷贝。

 深拷贝：当一个类的拷贝构造方法，不仅要复制对象的所有非引用成员变量值，还要为引用类型的成员变量创建新的实例，并且初始化为形式参数实例值。这个方式称为深拷贝

 Object.clone()基本规则如下：
 1、 基本类型：如果变量是基本很类型，则拷贝其值，比如int、float等。
 2、 对象：如果变量是一个实例对象，则拷贝其地址引用，也就是说此时新对象与原来对象是公用该实例变量。
 3、 String字符串：若变量为String字符串，则拷贝其地址引用。但是在修改时，它会从字符串池中重新生成一个新的字符串，原有紫都城对象保持不变。

 public class CloneUtils {
      @SuppressWarnings("unchecked")
      public static <T extends Serializable T clone(T obj){
          T cloneObj = null;
          try {
              //写入字节流
              ByteArrayOutputStream out = new ByteArrayOutputStream();
              ObjectOutputStream obs = new ObjectOutputStream(out);
              obs.writeObject(obj);
              obs.close();

              //分配内存，写入原始对象，生成新对象
              ByteArrayInputStream ios = new ByteArrayInputStream(out.toByteArray());
              ObjectInputStream ois = new ObjectInputStream(ios);
              //返回生成的新对象
              cloneObj = (T) ois.readObject();
              ois.close();
          } catch (Exception e) {
              e.printStackTrace();
          }
          return cloneObj;
      }
  }